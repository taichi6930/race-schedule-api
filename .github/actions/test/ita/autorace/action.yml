name: "ITa Test"
description: "Run ITa tests"

runs:
  using: "composite"
  steps:
    - name: Check out the repository
      uses: actions/checkout@v4

    - name: Set up pnpm
      uses: pnpm/action-setup@v2
      with:
        version: '9.10.0'

    - name: Cache pnpm store
      uses: actions/cache@v4
      with:
        path: |
          ~/.pnpm-store
          .pnpm-store
        key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-

    - name: Install dependencies
      run: pnpm install --frozen-lockfile --reporter=silent --no-audit
      shell: bash

    # サーバーが起動したらcurlを叩く
    - name: Start server in background
      run: |
        # start server quietly in background; redirect stdout/stderr
        pnpm --silent run start:local:no_data > /dev/null 2>&1 &
        # wait for health endpoint with shorter intervals (max ~30s)
        for i in {1..15}; do
          if curl --silent --fail --head http://localhost:3000/health >/dev/null 2>&1; then
            echo "Server started"
            break
          fi
          echo "Waiting for server to start... ($i)"
          sleep 2
        done
      shell: bash

    - name: Curl API for Autorace Place
      run: |
        # Initial GET request
        response=$(curl -s -X 'GET' \
          'http://localhost:3000/api/races/all/place?startDate=2024-10-01&finishDate=2024-10-31&raceType=autorace' \
          -H 'accept: application/json')

        # Initial GET Response Check
        autorace_items=$(echo "$response" | jq 'if type=="object" and has("AUTORACE") then .AUTORACE else . end')
        if [[ "$autorace_items" != "[]" ]]; then
          echo "❌ Initial GET request failed. Expected [], but got $response"
          exit 1
        fi

        # POST request
        post_response=$(curl -s -o /dev/null -w "%{http_code}" -X 'POST' \
          'http://localhost:3000/api/races/all/place' \
          -H 'accept: */*' \
          -H 'Content-Type: application/json' \
          -d '{
                "startDate": "2024-10-01",
                "finishDate": "2024-10-31",
                "raceType": ["autorace"]
              }')

        # POST Response Check
        if [[ "$post_response" != "200" ]]; then
          echo "❌ POST request failed with status code $post_response"
          exit 1
        fi

        # Updated GET request
        response=$(curl -s -X 'GET' \
          'http://localhost:3000/api/races/all/place?startDate=2024-10-01&finishDate=2024-10-31&raceType=autorace' \
          -H 'accept: application/json')

        # Final GET Response Check: autoraceキーのみ抜き出して要素数が31個であることを確認
        item_count=$(echo "$response" | jq 'if type=="object" and has("AUTORACE") then .AUTORACE | length else length end')
        if [[ "$item_count" -ne 31 ]]; then
          echo "❌ Updated GET request failed. Expected 31 items but got $item_count items."
          exit 1
        fi

        echo "✅ All checks passed successfully."
      shell: bash

    - name: Curl API for Autorace Race
      run: |
        # Initial GET request
        response=$(curl -s -X 'GET' \
          'http://localhost:3000/api/races/all/race?startDate=2024-10-01&finishDate=2024-11-01&raceType=autorace' \
          -H 'accept: application/json')

        # Initial GET Response Check
        autorace_items=$(echo "$response" | jq 'if type=="object" and has("AUTORACE") then .AUTORACE else . end')
        if [[ "$autorace_items" != "[]" ]]; then
          echo "❌ Initial GET request failed. Expected [], but got $response"
          exit 1
        fi

        # POST request
        post_response=$(curl -s -o /dev/null -w "%{http_code}" -X 'POST' \
          'http://localhost:3000/api/races/all/race' \
          -H 'accept: */*' \
          -H 'Content-Type: application/json' \
          -d '{
                "startDate": "2024-10-01",
                "finishDate": "2024-11-01",
                "raceType": ["autorace"]
              }')

        # POST Response Check
        if [[ "$post_response" != "200" ]]; then
          echo "❌ POST request failed with status code $post_response"
          exit 1
        fi

        # Updated GET request
        response=$(curl -s -X 'GET' \
          'http://localhost:3000/api/races/all/race?startDate=2024-10-01&finishDate=2024-11-01&raceType=autorace' \
          -H 'accept: application/json')

        # Final GET Response Check: autoraceキーのみ抜き出して要素数が372個であることを確認
        item_count=$(echo "$response" | jq 'if type=="object" and has("AUTORACE") then .AUTORACE | length else length end')
        if [[ "$item_count" -ne 372 ]]; then
          echo "❌ Updated GET request failed. Expected 372 items but got $item_count items."
          exit 1
        fi

        echo "✅ All checks passed successfully."
      shell: bash

    - name: Curl API for Autorace Calendar
      run: |
        # Initial GET request
        response=$(curl -s -X 'GET' \
          'http://localhost:3000/api/races/all/calendar?startDate=2024-10-01&finishDate=2024-11-01&raceType=autorace' \
          -H 'accept: application/json')

        # Initial GET Response Check
        autorace_items=$(echo "$response" | jq 'if type=="object" and has("AUTORACE") then .AUTORACE else . end')
        if [[ "$autorace_items" != "[]" ]]; then
          echo "❌ Initial GET request failed. Expected [], but got $response"
          exit 1
        fi

        # POST request
        post_response=$(curl -s -o /dev/null -w "%{http_code}" -X 'POST' \
          'http://localhost:3000/api/races/all/calendar' \
          -H 'accept: */*' \
          -H 'Content-Type: application/json' \
          -d '{
                "startDate": "2024-10-01",
                "finishDate": "2024-11-01",
                "raceType": ["autorace"]
              }')

        # POST Response Check
        if [[ "$post_response" != "200" ]]; then
          echo "❌ POST request failed with status code $post_response"
          exit 1
        fi

        # Updated GET request
        response=$(curl -s -X 'GET' \
          'http://localhost:3000/api/races/all/calendar?startDate=2024-10-01&finishDate=2024-11-01&raceType=autorace' \
          -H 'accept: application/json')

        # Final GET Response Check: autoraceキーのみ抜き出して要素数が31個であることを確認
        item_count=$(echo "$response" | jq 'if type=="object" and has("AUTORACE") then .AUTORACE | length else length end')
        if [[ "$item_count" -ne 31 ]]; then
          echo "❌ Updated GET request failed. Expected 31 items but got $item_count items."
          exit 1
        fi

        echo "✅ All checks passed successfully."
      shell: bash
