name: "Dependabot auto-merge"

on:
  workflow_run:
    workflows: ["Pull Request CI"]
    types:
      - completed

permissions:
  contents: write
  pull-requests: write
  checks: read

jobs:
  auto-merge:
    runs-on: ubuntu-latest
    if: |
      github.actor == 'dependabot[bot]' &&
      github.event.workflow_run.conclusion == 'success'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create GitHub App Token
        uses: actions/create-github-app-token@v1.6.2
        id: app-token
        with:
          app-id: ${{ secrets.BOT_APP_ID }}
          private-key: ${{ secrets.BOT_PRIVATE_KEY }}

      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v1.6.0
        with:
          github-token: "${{ steps.app-token.outputs.token }}"

      - name: Verify CI checks
        uses: actions/github-script@v7
        with:
          github-token: ${{ steps.app-token.outputs.token }}
          script: |
            const pullRequest = context.payload.workflow_run.pull_requests[0];
            if (!pullRequest) {
              core.setFailed('No pull request found');
              return;
            }

            const { owner, repo } = context.repo;
            const prNumber = pullRequest.number;

            // CIチェックの結果を確認
            const { data: checks } = await github.rest.checks.listForRef({
              owner,
              repo,
              ref: pullRequest.head.sha
            });

            const failedChecks = checks.check_runs.filter(check =>
              check.conclusion !== 'success' && check.conclusion !== 'skipped'
            );

            if (failedChecks.length > 0) {
              core.setFailed(`Found ${failedChecks.length} failed checks`);
              return;
            }

      - name: Auto approve and merge
        if: |
          steps.metadata.outputs.update-type == 'version-update:semver-patch' ||
          steps.metadata.outputs.update-type == 'version-update:semver-minor'
        uses: actions/github-script@v7
        with:
          github-token: ${{ steps.app-token.outputs.token }}
          script: |
            const pullRequest = context.payload.workflow_run.pull_requests[0];
            if (!pullRequest) {
              core.setFailed('No pull request found');
              return;
            }

            const { owner, repo } = context.repo;
            const prNumber = pullRequest.number;

            try {
              // Approve the pull request
              await github.rest.pulls.createReview({
                owner,
                repo,
                pull_number: prNumber,
                event: 'APPROVE'
              });

              console.log('PR approved successfully');

              // Update branch to ensure it's up to date
              await github.rest.pulls.updateBranch({
                owner,
                repo,
                pull_number: prNumber
              });

              console.log('Branch updated successfully');

              // Enable auto-merge with merge method
              await github.rest.pulls.merge({
                owner,
                repo,
                pull_number: prNumber,
                merge_method: 'merge'
              });

              console.log('PR merged successfully');
            } catch (error) {
              core.setFailed(`Failed to process PR: ${error.message}`);
              throw error;
            }