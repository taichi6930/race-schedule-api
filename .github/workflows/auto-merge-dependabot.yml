name: "Dependabot auto-merge"

on:
  workflow_run:
    workflows: ["Pull Request CI"]
    types:
      - completed

permissions:
  contents: write
  pull-requests: write
  checks: read

jobs:
  auto-merge:
    runs-on: ubuntu-latest
    if: |
      github.actor == 'dependabot[bot]' &&
      github.event.workflow_run.conclusion == 'success'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create GitHub App Token
        uses: actions/create-github-app-token@v1.6.2
        id: app-token
        with:
          app-id: ${{ secrets.BOT_APP_ID }}
          private-key: ${{ secrets.BOT_PRIVATE_KEY }}

      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v1.6.0
        with:
          github-token: "${{ steps.app-token.outputs.token }}"

      - name: Approve and enable auto-merge
        if: |
          steps.metadata.outputs.update-type == 'version-update:semver-patch' ||
          steps.metadata.outputs.update-type == 'version-update:semver-minor'
        uses: actions/github-script@v7
        with:
          github-token: ${{ steps.app-token.outputs.token }}
          script: |
            const pullRequest = context.payload.workflow_run.pull_requests[0];
            if (!pullRequest) {
              core.setFailed('No pull request found');
              return;
            }

            const { owner, repo } = context.repo;
            const prNumber = pullRequest.number;

            try {
              // Get PR details including node_id
              const { data: prData } = await github.rest.pulls.get({
                owner,
                repo,
                pull_number: prNumber
              });
              console.log('Retrieved PR details');

              // Approve the PR
              await github.rest.pulls.createReview({
                owner,
                repo,
                pull_number: prNumber,
                event: 'APPROVE'
              });
              console.log('Approved PR #' + prNumber);

              // Enable auto-merge using GraphQL
              try {
                await github.graphql(`
                  mutation EnableAutoMerge($pullRequestId: ID!) {
                    enablePullRequestAutoMerge(input: {
                      pullRequestId: $pullRequestId,
                      mergeMethod: MERGE
                    }) {
                      pullRequest {
                        number
                        autoMergeRequest {
                          enabledAt
                          mergeMethod
                        }
                      }
                    }
                  }
                `, {
                  pullRequestId: prData.node_id
                });
                console.log('Enabled auto-merge for PR #' + prNumber);
              } catch (graphqlError) {
                console.error('GraphQL error:', graphqlError);
                core.setFailed('Failed to enable auto-merge: ' + graphqlError.message);
                throw graphqlError;
              }
            } catch (error) {
              console.error('Error:', error);
              core.setFailed('Failed to process PR: ' + error.message);
              throw error;
            }
