name: "Auto-merge PR"

on:
  workflow_run:
    workflows: ["Pull Request CI"]
    types:
      - completed

permissions:
  contents: write
  pull-requests: write

jobs:
  auto-merge:
    runs-on: ubuntu-latest
    # CIが成功した場合のみ実行
    if: github.event.workflow_run.conclusion == 'success'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create GitHub App Token
        uses: actions/create-github-app-token@v1.6.2
        id: app-token
        with:
          app-id: ${{ secrets.BOT_APP_ID }}
          private-key: ${{ secrets.BOT_PRIVATE_KEY }}

      # PRの情報を安全に取得
      - name: Extract PR Information
        id: pr-info
        run: |
          # pull_requests配列をJSONとして取得
          echo "PULL_REQUESTS=$PULL_REQUESTS"
          
          # PRが存在するか確認
          if [ "$PULL_REQUESTS" == "[]" ] || [ -z "$PULL_REQUESTS" ]; then
            echo "No PRs associated with this workflow run"
            echo "has_pr=false" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          # 最初のPRのURLを取得
          PR_URL=$(echo "$PULL_REQUESTS" | jq -r '.[0].html_url')
          echo "Found PR: $PR_URL"
          echo "pr_url=$PR_URL" >> $GITHUB_OUTPUT
          echo "has_pr=true" >> $GITHUB_OUTPUT
        env:
          PULL_REQUESTS: ${{ toJSON(github.event.workflow_run.pull_requests) }}

      # PRが存在する場合のみマージ処理を実行
      - name: Auto-merge PR
        if: steps.pr-info.outputs.has_pr == 'true'
        run: |
          gh pr review --approve "$PR_URL"
          gh pr merge --auto --merge "$PR_URL"
        env:
          PR_URL: ${{ steps.pr-info.outputs.pr_url }}
          GH_TOKEN: ${{ steps.app-token.outputs.token }}