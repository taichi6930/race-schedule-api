name: Place Schedule

on:
  schedule:
    # 日本時間の毎週日曜日の20時に実行
    - cron: '0 11 * * 0'
  workflow_dispatch:
    inputs:
      start-date:
        description: 'Start date (YYYY-MM-DD format)'
        required: false
      finish-date:
        description: 'Finish date (YYYY-MM-DD format)'
        required: false

env:
  CLOUDFLARE_API_PRODUCTION_URL: "${{ secrets.CLOUDFLARE_API_PRODUCTION_URL }}"

permissions:
  contents: write
  pull-requests: write

jobs:
  set-dates:
    runs-on: ubuntu-latest
    outputs:
      start-date: ${{ steps.set-dates.outputs.start-date }}
      finish-date: ${{ steps.set-dates.outputs.finish-date }}
    steps:
      - name: Outputを設定
        id: set-dates
        run: |
          # 日付を計算、デフォルトは2週間前から1ヶ月後
          startDate="${{ github.event.inputs.start-date }}"
          finishDate="${{ github.event.inputs.finish-date }}"

          # 入力がない場合のデフォルト設定
          if [ -z "$startDate" ]; then
            startDate=$(date -d "-2 weeks" +"%Y-%m-%d")
          fi
          if [ -z "$finishDate" ]; then
            finishDate=$(date -d "+1 month" +"%Y-%m-%d")
          fi

          # GITHUB_OUTPUTを使って出力設定
          echo "start-date=$startDate" >> $GITHUB_OUTPUT
          echo "finish-date=$finishDate" >> $GITHUB_OUTPUT

  health-check:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: API Health Check
        id: health-check
        uses: fjogeleit/http-request-action@v1
        with:
          url: ${{ env.CLOUDFLARE_API_PRODUCTION_URL }}/health
          method: 'GET'
          preventFailureOnNoResponse: false
          timeout: 30000

      - name: Display health check result
        run: |
          echo "Status: ${{ steps.health-check.outputs.status }}"
          echo "Response: ${{ steps.health-check.outputs.response }}"

  update-place-data:
    needs: [set-dates, health-check]
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Update Place Data
        id: update-place
        uses: fjogeleit/http-request-action@v1
        with:
          url: ${{ env.CLOUDFLARE_API_PRODUCTION_URL }}/place
          method: 'POST'
          customHeaders: '{"Content-Type": "application/json", "accept": "*/*"}'
          data: |
            {
              "startDate": "${{ needs.set-dates.outputs.start-date }}",
              "finishDate": "${{ needs.set-dates.outputs.finish-date }}",
              "raceType": ["JRA", "NAR", "OVERSEAS", "KEIRIN", "AUTORACE"]
            }
          timeout: 120000
          
      - name: Display update result
        run: |
          echo "Status: ${{ steps.update-place.outputs.status }}"
          echo "Response: ${{ steps.update-place.outputs.response }}"